name: Deployer
description: Composite action to deploy projects on different AWS services

inputs:
  METHOD:
    required: true
    description: Which method will be used to deploy the code (EC2 is the only one on this first stage)
  EC2_IP:
    required: true
    description: IP to connecto to the EC2 server. Ex. ec2-xx-xxx-xxx-x.compute-4.amazonaws.com
  EC2_USER:
    required: true
    description: user to login on EC2 instance
  EC2_KEY:
    required: true
    description: Key to connect to the EC2 Server via SSH
  IMAGE_NAME:
    required: true
    description: Zipped file with the Docker image to be copied and deployed
  COMPOSE_PORTS:
    required: true
    description: Formatted ports for a docker compose structure
  COMPOSE_NETWORKS:
    required: true
    description: Formatted networks for a docker compose structure
  COMPOSE_FILE_NAME:
    required: true
    description: Name for the new docker compose file to be created

runs:
  using: "composite"
  steps:

    - name: Make scripts executable
      shell: bash
      run: |
        echo âœ… Method detected: ${{ inputs.METHOD }}
        chmod +x ${{ github.action_path }}/scripts/*.sh

    - name: EC2 - Preparing PEM Key for SSH Connection
      id: ec2_pem
      shell: bash
      run: |
        if [ "${{ inputs.METHOD }}" = "EC2" ]; then
          echo "${{ inputs.EC2_KEY }}" | tr -d '\r' > server_key.pem
          chmod 600 server_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ inputs.EC2_IP }} >> ~/.ssh/known_hosts
        fi

    - name: EC2 - Copy and deploy docker image
      id: ec2_copy_deploy
      shell: bash
      run: |
        if [ "${{ inputs.METHOD }}" = "EC2" ]; then
          scp -i server_key.pem ${{ inputs.IMAGE_NAME }}.tar ${{ inputs.EC2_USER }}@${{ inputs.EC2_IP }}:/root/
          ssh -i server_key.pem ${{ inputs.EC2_USER }}@${{ inputs.EC2_IP }} \
          "COMPOSE_PORTS='${{ inputs.COMPOSE_PORTS }}' \
          COMPOSE_NETWORKS='${{ inputs.COMPOSE_NETWORKS }}' \
          COMPOSE_FILE_NAME='${{ inputs.COMPOSE_FILE_NAME }}' \
          IMAGE_NAME='${{ inputs.IMAGE_NAME }}.tar' \
          bash -s" < ${{ github.action_path }}/scripts/ec2_deploy.sh
        fi